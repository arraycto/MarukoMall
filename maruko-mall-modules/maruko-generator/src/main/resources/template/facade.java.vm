package ${package}.client.facade.api;

import ${package}.client.dto.${className}DTO;
import ${commonPackage}.msg.BaseResponse;
import ${commonPackage}.msg.ListRestResponse;
import ${commonPackage}.msg.ObjectRestResponse;
import ${commonPackage}.msg.TableResultResponse;
import ${commonPackage}.page.PageRestRequest;
import org.springframework.web.bind.annotation.*;

import java.util.Map;

/**
 * ${comments}
 *
 * @author ${author}
 * @date ${datetime}
 */
public interface I${className}Facade {

	/**
	 * 添加数据
	 * @param ${classname}DTO
	 * @return
	 */
	@PostMapping("/facade/${classname}/add")
	BaseResponse add(@RequestBody ${className}DTO ${classname}DTO);

	/**
	 * 更新数据
	 * @param ${classname}DTO
	 * @return
	 */
	@PutMapping("/facade/${classname}/update")
	BaseResponse update(@RequestBody ${className}DTO ${classname}DTO);

	/**
	 * 根据ID删除数据
	 * @param id
	 * @return
	 */
	@DeleteMapping("/facade/${classname}/remove/{id}")
	BaseResponse remove(@PathVariable("id") Integer id);

	/**
	 * 根据Id查找
	 * @param id
	 * @return
	 */
	@GetMapping("/facade/${classname}/findById/{id}")
	ObjectRestResponse<${className}DTO> findById(@PathVariable("id") Integer id);


	/**
	 * 根据条件查找数据
	 * @param ${classname}DTO
	 * @return
	 */
	@PostMapping("/facade/${classname}/query")
	ListRestResponse<${className}DTO> query(@RequestBody ${className}DTO ${classname}DTO);

	/**
	 * 查找数据显示分页
	 * @param pageRestRequest
	 * @return
	 */
	@PostMapping("/facade/${classname}/page")
	TableResultResponse<${className}DTO> page(@RequestBody PageRestRequest<${className}DTO> pageRestRequest);

	/**
	 * 根据条件查找数据
	 * @param ${classname}DTO
	 * @return
	 */
	@PostMapping("/facade/${classname}/findByCondition")
	ObjectRestResponse<${className}DTO> findByCondition(@RequestBody ${className}DTO ${classname}DTO);

}
