package ${package}.rest;

import ${package}.client.dto.${className}DTO;
import ${package}.client.facade.api.I${className}Facade;
import ${package}.service.I${className}Service;
import com.ktpfx.common.msg.BaseResponse;
import com.ktpfx.common.msg.ListRestResponse;
import com.ktpfx.common.msg.ObjectRestResponse;
import com.ktpfx.common.msg.TableResultResponse;
import com.ktpfx.common.page.PageRestRequest;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

/**
 * ${comments}
 *
 * @author ${author}
 * @date ${datetime}
 */
@RestController
public class ${className}Controller implements I${className}Facade {

	@Autowired
	private I${className}Service ${classname}Service;

	@Override
	public BaseResponse add(@RequestBody ${className}DTO ${classname}DTO) {
		return ${classname}Service.add(${classname}DTO);
	}

	@Override
	public BaseResponse update(@RequestBody ${className}DTO ${classname}DTO) {
		return ${classname}Service.update(${classname}DTO);
	}

	@Override
	public BaseResponse remove(@PathVariable("id") Integer id) {
		return ${classname}Service.remove(id);
	}

	@Override
	public ObjectRestResponse<${className}DTO> findById(@PathVariable("id") Integer id) {
		return ${classname}Service.findById(id);
	}

	@Override
	public ListRestResponse<${className}DTO> query(@RequestBody ${className}DTO ${classname}DTO) {
		return ${classname}Service.query(${classname}DTO);
	}

	@Override
	public TableResultResponse<${className}DTO> page(@RequestBody PageRestRequest<${className}DTO> pageRestRequest) {
		return ${classname}Service.page(pageRestRequest.getData(), pageRestRequest.getPage());
	}

	@Override
	public ObjectRestResponse<${className}DTO> findByCondition(@RequestBody ${className}DTO ${classname}DTO) {
		return ${classname}Service.findByCondition(${classname}DTO);
	}
}